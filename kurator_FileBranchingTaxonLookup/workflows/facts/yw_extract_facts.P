% FACT: extract_source(source_id, source_path).
extract_source(1, 'packages/kurator_FileBranchingTaxonLookup/workflows/file_branching_taxon_lookup.yaml').
% FACT: annotation(annotation_id, source_id, line_number, tag, keyword, value).
annotation(1, 1, 103, 'begin', '@BEGIN', 'FileBranchingTaxonLookupWorkflow').
annotation(2, 1, 104, 'param', '@PARAM', 'InputFilePath').
annotation(3, 1, 105, 'in', '@IN', 'DarwinCoreFile').
annotation(4, 1, 105, 'uri', '@URI', 'file:packages/kurator_branching_generic/data/kurator_sample_data_v2.txt').
annotation(5, 1, 111, 'begin', '@BEGIN', 'Setup').
annotation(6, 1, 111, 'desc', '@desc', 'Create a unique workspace and transform the input file to a file\n with chosen format and field names standardized to Darwin Core').
annotation(7, 1, 112, 'param', '@PARAM', 'InputFilePath').
annotation(8, 1, 113, 'in', '@IN', 'DarwinCoreFile').
annotation(9, 1, 113, 'uri', '@URI', 'file:packages/kurator_branching_generic/data/kurator_sample_data_v2.txt').
annotation(10, 1, 201, 'out', '@OUT', 'workspace').
annotation(11, 1, 201, 'as', '@as', 'Workspace').
annotation(12, 1, 202, 'out', '@OUT', 'OccurrenceFile').
annotation(13, 1, 202, 'uri', '@URI', 'file:{workspace}/darwinized_file.txt').
annotation(14, 1, 203, 'end', '@END', 'Setup').
annotation(15, 1, 206, 'begin', '@BEGIN', 'FileToDataStream').
annotation(16, 1, 206, 'desc', '@desc', 'Take the darwinized occurrence file and stream records from it').
annotation(17, 1, 207, 'in', '@IN', 'OccurrenceFile').
annotation(18, 1, 213, 'out', '@OUT', 'DataRecord').
annotation(19, 1, 214, 'end', '@END', 'FileToDataStream').
annotation(20, 1, 217, 'begin', '@BEGIN', 'EnvironmentTagger').
annotation(21, 1, 217, 'desc', '@desc', 'Tag each record in the stream that appears to be marine with isMarine=true and nonmarine with isMarine=false').
annotation(22, 1, 218, 'in', '@IN', 'DataRecord').
annotation(23, 1, 224, 'out', '@OUT', 'LogFile').
annotation(24, 1, 224, 'uri', '@URI', 'file:runlog.log').
annotation(25, 1, 225, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> {ActorValue}:isMarine:true={isMarineValue}').
annotation(26, 1, 226, 'out', '@OUT', 'TaggedDataRecord').
annotation(27, 1, 227, 'end', '@END', 'EnvironmentTagger').
annotation(28, 1, 230, 'begin', '@BEGIN', 'FilterToJustMarine').
annotation(29, 1, 230, 'desc', '@desc', 'Pass only records tagged with isMarine=true').
annotation(30, 1, 231, 'in', '@IN', 'TaggedDataRecord').
annotation(31, 1, 241, 'out', '@OUT', 'LogFile').
annotation(32, 1, 241, 'uri', '@URI', 'file:runlog.log').
annotation(33, 1, 242, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> [isMarine]=[true]:{matchMarineValue}. Passing occurrenceID={occurrenceID}').
annotation(34, 1, 243, 'out', '@OUT', 'MarineDataRecord').
annotation(35, 1, 244, 'end', '@End', 'FilterToJustMarine').
annotation(36, 1, 247, 'begin', '@BEGIN', 'FilterExcludingMarine').
annotation(37, 1, 247, 'desc', '@desc', 'Pass only records not tagged with isMarine=true').
annotation(38, 1, 248, 'in', '@IN', 'TaggedDataRecord').
annotation(39, 1, 258, 'out', '@OUT', 'LogFile').
annotation(40, 1, 258, 'uri', '@URI', 'file:runlog.log').
annotation(41, 1, 259, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> [isMarine]=[true]:{matchMarineValue}. Passing occurrenceID={occurrenceID}').
annotation(42, 1, 260, 'out', '@OUT', 'notMarineDataRecord').
annotation(43, 1, 261, 'end', '@END', 'FilterExcludingMarine').
annotation(44, 1, 264, 'begin', '@BEGIN', 'WoRMSLookup').
annotation(45, 1, 264, 'desc', '@desc', 'Lookup GUIDs for names in WoRMS').
annotation(46, 1, 265, 'in', '@IN', 'MarineDataRecord').
annotation(47, 1, 271, 'out', '@OUT', 'WoRMSUpdatedRecord').
annotation(48, 1, 272, 'out', '@OUT', 'LogFile').
annotation(49, 1, 272, 'uri', '@URI', 'file:runlog.log').
annotation(50, 1, 273, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Looking Up: {scientificName}:{scientificNameAuthorship}').
annotation(51, 1, 274, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Found GUID: {LookupValue}').
annotation(52, 1, 275, 'end', '@END', 'WoRMSLookup').
annotation(53, 1, 278, 'begin', '@BEGIN', 'GBIFLookup').
annotation(54, 1, 278, 'desc', '@desc', 'Lookup GUIDs for names in GBIF').
annotation(55, 1, 279, 'in', '@IN', 'notMarineDataRecord').
annotation(56, 1, 285, 'out', '@OUT', 'GBIFUpdatedRecord').
annotation(57, 1, 286, 'out', '@OUT', 'LogFile').
annotation(58, 1, 286, 'uri', '@URI', 'file:runlog.log').
annotation(59, 1, 287, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Looking Up: {scientificName}:{scientificNameAuthorship}').
annotation(60, 1, 288, 'log', '@LOG', '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Found GUID: {LookupValue}').
annotation(61, 1, 289, 'end', '@END', 'GBIFLookup').
annotation(62, 1, 292, 'begin', '@BEGIN', 'StreamMerge').
annotation(63, 1, 292, 'desc', '@desc', 'Merge the streams').
annotation(64, 1, 293, 'in', '@IN', 'GBIFUpdatedRecord').
annotation(65, 1, 294, 'in', '@IN', 'WoRMSUpdatedRecord').
annotation(66, 1, 303, 'out', '@OUT', 'MergedStream').
annotation(67, 1, 304, 'end', '@END', 'StreamMerge').
annotation(68, 1, 306, 'begin', '@BEGIN', 'CsvFileWriter').
annotation(69, 1, 306, 'desc', '@desc', 'Write to a csv file and wrapup by finishing the workflow').
annotation(70, 1, 307, 'in', '@IN', 'Workspace').
annotation(71, 1, 308, 'in', '@IN', 'MergedStream').
annotation(72, 1, 319, 'out', '@OUT', 'UpdatedDarwinCoreFile').
annotation(73, 1, 319, 'uri', '@URI', 'file:{workspace}/mergedoutputfile.csv').
annotation(74, 1, 320, 'end', '@END', 'CsvFileWriter').
annotation(75, 1, 352, 'out', '@OUT', 'UpdatedDarwinCoreFile').
annotation(76, 1, 353, 'out', '@OUT', 'LogFile').
annotation(77, 1, 354, 'end', '@END', 'FileBranchingTaxonLookupWorkflow').
% FACT: annotation_qualifies(qualifying_annotation_id, primary_annotation_id).
annotation_qualifies(4, 3).
annotation_qualifies(6, 5).
annotation_qualifies(9, 8).
annotation_qualifies(11, 10).
annotation_qualifies(13, 12).
annotation_qualifies(16, 15).
annotation_qualifies(21, 20).
annotation_qualifies(24, 23).
annotation_qualifies(25, 23).
annotation_qualifies(29, 28).
annotation_qualifies(32, 31).
annotation_qualifies(33, 31).
annotation_qualifies(37, 36).
annotation_qualifies(40, 39).
annotation_qualifies(41, 39).
annotation_qualifies(45, 44).
annotation_qualifies(49, 48).
annotation_qualifies(50, 48).
annotation_qualifies(51, 48).
annotation_qualifies(54, 53).
annotation_qualifies(58, 57).
annotation_qualifies(59, 57).
annotation_qualifies(60, 57).
annotation_qualifies(63, 62).
annotation_qualifies(69, 68).
annotation_qualifies(73, 72).
