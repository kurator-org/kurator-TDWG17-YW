
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'DwCA_Taxon_Lookup', 'DwCA_Taxon_Lookup', 1, 77).
program(2, 'Setup', 'DwCA_Taxon_Lookup.Setup', 3, 14).
program(3, 'FileToDataStream', 'DwCA_Taxon_Lookup.FileToDataStream', 15, 19).
program(4, 'EnvironmentTagger', 'DwCA_Taxon_Lookup.EnvironmentTagger', 20, 27).
program(5, 'FilterToJustMarine', 'DwCA_Taxon_Lookup.FilterToJustMarine', 28, 35).
program(6, 'FilterToNonMarine', 'DwCA_Taxon_Lookup.FilterToNonMarine', 36, 43).
program(7, 'WoRMSLookup', 'DwCA_Taxon_Lookup.WoRMSLookup', 44, 52).
program(8, 'GBIFLookup', 'DwCA_Taxon_Lookup.GBIFLookup', 53, 61).
program(9, 'StreamMerge', 'DwCA_Taxon_Lookup.StreamMerge', 62, 67).
program(10, 'CsvFileWriter', 'DwCA_Taxon_Lookup.CsvFileWriter', 68, 74).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).
has_subprogram(1, 7).
has_subprogram(1, 8).
has_subprogram(1, 9).
has_subprogram(1, 10).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'IN', 'DarwinCoreArchive', 'DwCA_Taxon_Lookup<-DarwinCoreArchive', 2, 1).
port(29, 'OUT', 'UpdatedOccurrenceFile', 'DwCA_Taxon_Lookup->UpdatedOccurrenceFile', 75, 14).
port(30, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup->LogFile', 76, 15).
port(2, 'IN', 'DarwinCoreArchive', 'DwCA_Taxon_Lookup.Setup<-DarwinCoreArchive', 5, 2).
port(3, 'OUT', 'workspace', 'DwCA_Taxon_Lookup.Setup->workspace', 7, 3).
port(4, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup.Setup->LogFile', 9, 4).
port(5, 'OUT', 'OccurrenceFile', 'DwCA_Taxon_Lookup.Setup->OccurrenceFile', 12, 5).
port(6, 'IN', 'OccurrenceFile', 'DwCA_Taxon_Lookup.FileToDataStream<-OccurrenceFile', 17, 5).
port(7, 'OUT', 'DataRecord', 'DwCA_Taxon_Lookup.FileToDataStream->DataRecord', 18, 6).
port(8, 'IN', 'DataRecord', 'DwCA_Taxon_Lookup.EnvironmentTagger<-DataRecord', 22, 6).
port(9, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup.EnvironmentTagger->LogFile', 23, 4).
port(10, 'OUT', 'TaggedDataRecord', 'DwCA_Taxon_Lookup.EnvironmentTagger->TaggedDataRecord', 26, 7).
port(11, 'IN', 'TaggedDataRecord', 'DwCA_Taxon_Lookup.FilterToJustMarine<-TaggedDataRecord', 30, 7).
port(12, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup.FilterToJustMarine->LogFile', 31, 4).
port(13, 'OUT', 'MarineDataRecord', 'DwCA_Taxon_Lookup.FilterToJustMarine->MarineDataRecord', 34, 8).
port(14, 'IN', 'TaggedDataRecord', 'DwCA_Taxon_Lookup.FilterToNonMarine<-TaggedDataRecord', 38, 7).
port(15, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup.FilterToNonMarine->LogFile', 39, 4).
port(16, 'OUT', 'notMarineDataRecord', 'DwCA_Taxon_Lookup.FilterToNonMarine->notMarineDataRecord', 42, 9).
port(17, 'IN', 'MarineDataRecord', 'DwCA_Taxon_Lookup.WoRMSLookup<-MarineDataRecord', 46, 8).
port(18, 'OUT', 'WoRMSUpdatedRecord', 'DwCA_Taxon_Lookup.WoRMSLookup->WoRMSUpdatedRecord', 47, 10).
port(19, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup.WoRMSLookup->LogFile', 48, 4).
port(20, 'IN', 'notMarineDataRecord', 'DwCA_Taxon_Lookup.GBIFLookup<-notMarineDataRecord', 55, 9).
port(21, 'OUT', 'GBIFUpdatedRecord', 'DwCA_Taxon_Lookup.GBIFLookup->GBIFUpdatedRecord', 56, 11).
port(22, 'OUT', 'LogFile', 'DwCA_Taxon_Lookup.GBIFLookup->LogFile', 57, 4).
port(23, 'IN', 'GBIFUpdatedRecord', 'DwCA_Taxon_Lookup.StreamMerge<-GBIFUpdatedRecord', 64, 11).
port(24, 'IN', 'WoRMSUpdatedRecord', 'DwCA_Taxon_Lookup.StreamMerge<-WoRMSUpdatedRecord', 65, 10).
port(25, 'OUT', 'MergedStream', 'DwCA_Taxon_Lookup.StreamMerge->MergedStream', 66, 12).
port(26, 'IN', 'Workspace', 'DwCA_Taxon_Lookup.CsvFileWriter<-Workspace', 70, 3).
port(27, 'IN', 'MergedStream', 'DwCA_Taxon_Lookup.CsvFileWriter<-MergedStream', 71, 12).
port(28, 'OUT', 'UpdatedOccurrenceFile', 'DwCA_Taxon_Lookup.CsvFileWriter->UpdatedOccurrenceFile', 72, 13).

% FACT: port_alias(port_id, alias).
port_alias(3, 'Workspace').

% FACT: port_uri_template(port_id, uri).
port_uri_template(2, 'file:packages/kurator_FileBranchingTaxonLookup/data/kurator_sample_data_v2.txt').
port_uri_template(4, 'file:./packages/kurator_FileBranchingTaxonLookup/workflows/results/runlog.log').
port_uri_template(5, 'file:{workspace}/darwinized_file.txt').
port_uri_template(9, 'file:./packages/kurator_FileBranchingTaxonLookup/workflows/results/runlog.log').
port_uri_template(12, 'file:./packages/kurator_FileBranchingTaxonLookup/workflows/results/runlog.log').
port_uri_template(15, 'file:./packages/kurator_FileBranchingTaxonLookup/workflows/results/runlog.log').
port_uri_template(19, 'file:./packages/kurator_FileBranchingTaxonLookup/workflows/results/runlog.log').
port_uri_template(22, 'file:./packages/kurator_FileBranchingTaxonLookup/workflows/results/runlog.log').
port_uri_template(28, 'file:{workspace}/mergedoutputfile.csv').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 2).
has_in_port(3, 6).
has_in_port(4, 8).
has_in_port(5, 11).
has_in_port(6, 14).
has_in_port(7, 17).
has_in_port(8, 20).
has_in_port(9, 23).
has_in_port(9, 24).
has_in_port(10, 26).
has_in_port(10, 27).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 29).
has_out_port(1, 30).
has_out_port(2, 3).
has_out_port(2, 4).
has_out_port(2, 5).
has_out_port(3, 7).
has_out_port(4, 9).
has_out_port(4, 10).
has_out_port(5, 12).
has_out_port(5, 13).
has_out_port(6, 15).
has_out_port(6, 16).
has_out_port(7, 18).
has_out_port(7, 19).
has_out_port(8, 21).
has_out_port(8, 22).
has_out_port(9, 25).
has_out_port(10, 28).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'DarwinCoreArchive', '[DarwinCoreArchive]').
data(14, 'UpdatedOccurrenceFile', '[UpdatedOccurrenceFile]').
data(15, 'LogFile', '[LogFile]').
data(2, 'DarwinCoreArchive', 'DwCA_Taxon_Lookup[DarwinCoreArchive]').
data(3, 'Workspace', 'DwCA_Taxon_Lookup[Workspace]').
data(4, 'LogFile', 'DwCA_Taxon_Lookup[LogFile]').
data(5, 'OccurrenceFile', 'DwCA_Taxon_Lookup[OccurrenceFile]').
data(6, 'DataRecord', 'DwCA_Taxon_Lookup[DataRecord]').
data(7, 'TaggedDataRecord', 'DwCA_Taxon_Lookup[TaggedDataRecord]').
data(8, 'MarineDataRecord', 'DwCA_Taxon_Lookup[MarineDataRecord]').
data(9, 'notMarineDataRecord', 'DwCA_Taxon_Lookup[notMarineDataRecord]').
data(10, 'WoRMSUpdatedRecord', 'DwCA_Taxon_Lookup[WoRMSUpdatedRecord]').
data(11, 'GBIFUpdatedRecord', 'DwCA_Taxon_Lookup[GBIFUpdatedRecord]').
data(12, 'MergedStream', 'DwCA_Taxon_Lookup[MergedStream]').
data(13, 'UpdatedOccurrenceFile', 'DwCA_Taxon_Lookup[UpdatedOccurrenceFile]').

% FACT: channel(channel_id, data_id).
channel(1, 2).
channel(2, 5).
channel(3, 6).
channel(4, 7).
channel(5, 7).
channel(6, 8).
channel(7, 9).
channel(8, 11).
channel(9, 10).
channel(10, 3).
channel(11, 12).
channel(12, 14).
channel(13, 15).
channel(14, 1).
channel(15, 13).
channel(16, 4).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(2, 1).
port_connects_to_channel(5, 2).
port_connects_to_channel(6, 2).
port_connects_to_channel(7, 3).
port_connects_to_channel(8, 3).
port_connects_to_channel(10, 4).
port_connects_to_channel(11, 4).
port_connects_to_channel(10, 5).
port_connects_to_channel(14, 5).
port_connects_to_channel(13, 6).
port_connects_to_channel(17, 6).
port_connects_to_channel(16, 7).
port_connects_to_channel(20, 7).
port_connects_to_channel(21, 8).
port_connects_to_channel(23, 8).
port_connects_to_channel(18, 9).
port_connects_to_channel(24, 9).
port_connects_to_channel(3, 10).
port_connects_to_channel(26, 10).
port_connects_to_channel(25, 11).
port_connects_to_channel(27, 11).
port_connects_to_channel(28, 12).
port_connects_to_channel(22, 13).
port_connects_to_channel(2, 14).
port_connects_to_channel(28, 15).
port_connects_to_channel(22, 16).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 1).
inflow_connects_to_channel(1, 14).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(29, 12).
outflow_connects_to_channel(30, 13).
outflow_connects_to_channel(29, 15).
outflow_connects_to_channel(30, 16).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).
uri_variable(1, 'workspace', 5).
uri_variable(2, 'workspace', 28).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).
log_template(1, 4, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Published product: darwinized_header_file = {workspace}/darwinized_file.txt', 11).
log_template(2, 9, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> {ActorValue}:isMarine:true={isMarineValue}', 25).
log_template(3, 12, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> [isMarine]=[true]:{matchMarineValue}. Passing occurrenceID={occurrenceID}', 33).
log_template(4, 15, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> [isMarine]=[true]:{matchMarineValue}. Passing occurrenceID={occurrenceID}', 41).
log_template(5, 19, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Looking Up: {scientificName}:{scientificNameAuthorship}', 50).
log_template(6, 19, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Found GUID: {LookupValue}', 51).
log_template(7, 22, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Looking Up: {scientificName}:{scientificNameAuthorship}', 59).
log_template(8, 22, '{timestamp} [{loglevel}] ACTOR<{actorname}> -> Found GUID: {LookupValue}', 60).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
log_template_variable(1, 'timestamp', 1).
log_template_variable(2, 'loglevel', 1).
log_template_variable(3, 'actorname', 1).
log_template_variable(4, 'workspace', 1).
log_template_variable(5, 'timestamp', 2).
log_template_variable(6, 'loglevel', 2).
log_template_variable(7, 'actorname', 2).
log_template_variable(8, 'ActorValue', 2).
log_template_variable(9, 'isMarineValue', 2).
log_template_variable(10, 'timestamp', 3).
log_template_variable(11, 'loglevel', 3).
log_template_variable(12, 'actorname', 3).
log_template_variable(13, 'matchMarineValue', 3).
log_template_variable(14, 'occurrenceID', 3).
log_template_variable(15, 'timestamp', 4).
log_template_variable(16, 'loglevel', 4).
log_template_variable(17, 'actorname', 4).
log_template_variable(18, 'matchMarineValue', 4).
log_template_variable(19, 'occurrenceID', 4).
log_template_variable(20, 'timestamp', 5).
log_template_variable(21, 'loglevel', 5).
log_template_variable(22, 'actorname', 5).
log_template_variable(23, 'scientificName', 5).
log_template_variable(24, 'scientificNameAuthorship', 5).
log_template_variable(25, 'timestamp', 6).
log_template_variable(26, 'loglevel', 6).
log_template_variable(27, 'actorname', 6).
log_template_variable(28, 'LookupValue', 6).
log_template_variable(29, 'timestamp', 7).
log_template_variable(30, 'loglevel', 7).
log_template_variable(31, 'actorname', 7).
log_template_variable(32, 'scientificName', 7).
log_template_variable(33, 'scientificNameAuthorship', 7).
log_template_variable(34, 'timestamp', 8).
log_template_variable(35, 'loglevel', 8).
log_template_variable(36, 'actorname', 8).
log_template_variable(37, 'LookupValue', 8).
